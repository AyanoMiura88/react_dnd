{"version":3,"sources":["Button/PrimaryBtn.tsx","Login/LoginText.tsx","Login/LoginPage.tsx","Top/TopPage.tsx","DragAndDrop/DropArea.tsx","Atom/Atom.ts","Modal/Modal.tsx","Table/CheckBox.tsx","Table/Table.tsx","Hooks/useCheckBox.tsx","App.tsx","reportWebVitals.ts","Materialui/Color.ts","index.tsx"],"names":["PrimaryButton","props","children","onClick","Button","variant","color","style","margin","LoginText","id","placeholder","label","onChange","TextField","LoginPage","useState","username","setUsername","password","setPassword","history","useHistory","marginTop","e","target","value","push","TopPage","handleOnClickToDnd","useCallback","handleOnClickToTable","DropArea","state","setState","view","setView","handleDropOver","stopPropagation","preventDefault","handleDrop","handleOnChange","file","dataTransfer","files","fileList","reader","FileReader","i","length","readAsDataURL","onloadend","result","handleClear","className","onDragOver","onDrop","map","img","src","alt","TableHeader","atom","key","default","TableAtomState","name","level","Math","random","Modal","show","setShow","data","useSetRecoilState","setName","setLevel","useEffect","String","handleCloseClick","handleGetName","handleGetLevel","checkNum","str","RegExp","test","prev","list","forEach","v","newObj","Number","splice","alert","CheckBox","checked","type","TablePage","useRecoilState","header","useRecoilValue","checkedValues","setCheckedValues","handleChecked","includes","filter","checkedValue","useCheckBox","oneData","setOneData","dataList","scope","newList","_","some","num","App","path","exact","component","Table","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Color","createTheme","palette","primary","light","main","dark","contrastText","secondary","ReactDOM","render","theme","StrictMode","document","getElementById"],"mappings":"uTAoBeA,EAXO,SAACC,GACrB,IAAQC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,QAClB,OAEE,aADA,CACCC,EAAA,EAAD,CAAQD,QAASA,EAASE,QAAQ,YAAYC,MAAM,UAAUC,MAAO,CAAEC,OAAQ,QAA/E,SACGN,K,SCaQO,EAhBG,SAACR,GACjB,IAAQS,EAAsDT,EAAtDS,GAAIC,EAAkDV,EAAlDU,YAAaC,EAAqCX,EAArCW,MAAOP,EAA8BJ,EAA9BI,QAASG,EAAqBP,EAArBO,OAAQK,EAAaZ,EAAbY,SACjD,OACE,8BACE,cAACC,EAAA,EAAD,CACEJ,GAAIA,EACJC,YAAaA,EACbC,MAAOA,EACPP,QAASA,EACTG,OAAQA,EACRK,SAAUA,OCiBHE,EAjCG,WAChB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAUC,cAOhB,OACE,sBAAKf,MAAO,CAAEgB,UAAW,KAAzB,UACE,cAAC,EAAD,CACEb,GAAG,IACHC,YAAa,OACbC,MAAM,WACNP,QAAQ,WACRG,OAAO,QACPK,SAAU,SAACW,GAAD,OAAON,EAAYM,EAAEC,OAAOC,UAExC,cAAC,EAAD,CACEhB,GAAG,IACHC,YAAa,SACbC,MAAM,WACNP,QAAQ,WACRG,OAAO,QACPK,SAAU,SAACW,GAAD,OAAOJ,EAAYI,EAAEC,OAAOC,UAExC,cAAC,EAAD,CAAevB,QAvBG,WACH,SAAbc,GAAoC,WAAbE,GACzBE,EAAQM,KAAK,aAqBb,uBCXSC,EAlBC,WACd,IAAMP,EAAUC,cAEVO,EAAqBC,uBAAY,WACrCT,EAAQM,KAAK,cACZ,IACGI,EAAuBD,uBAAY,WACvCT,EAAQM,KAAK,gBACb,IAEF,OACE,sBAAKpB,MAAO,CAAEgB,UAAW,KAAzB,UACE,cAAC,EAAD,CAAepB,QAAS0B,EAAxB,uBACA,cAAC,EAAD,CAAe1B,QAAS4B,EAAxB,6B,OCgESC,G,MA9EE,WACf,MAA0BhB,mBAAmB,IAA7C,mBAAOiB,EAAP,KAAcC,EAAd,KACA,EAAwBlB,mBAAiB,IAAzC,mBAAOmB,EAAP,KAAaC,EAAb,KAEMC,EAAiBP,uBACrB,SAACN,GACCA,EAAEc,kBACFd,EAAEe,mBAEJ,CAACN,IAGGO,EAAaV,uBACjB,SAACN,GACCA,EAAEc,kBACFd,EAAEe,iBACFE,EAAejB,KAEjB,CAACS,IAGGQ,EAAiBX,uBACrB,SAACN,GAIC,IAHA,IAAMkB,EAAOlB,EAAEmB,aAAaC,MACtBC,EAAQ,YAAOZ,GACfa,EAAS,IAAIC,WACVC,EAAI,EAAGA,EAAIN,EAAKO,OAAQD,IAC/BF,EAAOI,cAAcR,EAAKM,IAC1BF,EAAOK,UAAY,WAEY,kBAAlBL,EAAOM,SAChBP,EAASlB,KAAKmB,EAAOM,QACrBlB,EAAS,YAAIW,QAKrB,CAACZ,IAIGoB,EAAcvB,uBAAY,WAC9BI,EAAS,IACTE,EAAQ,MACP,IAEH,OACE,sBAAKkB,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAUC,WAAYlB,EAAgBmB,OAAQhB,EAA7D,UACE,sBAAKc,UAAU,YAAf,qBAEGrB,EAAMwB,KAAI,SAACC,EAAKV,GACf,OAEE,aADA,CACA,OAAa7C,QAAS,kBAAMiC,EAAQsB,IAApC,SACE,qBAAKJ,UAAU,YAAoBK,IAAKD,EAAKE,IAAI,4BAAjBZ,IADxBA,SAWff,EAAMgB,OACL,wBAAQK,UAAU,WAAWnD,QAASkD,EAAtC,mBAIA,gCAGJ,qBAAKC,UAAU,OAAf,SAAuBnB,GAAQ,qBAAKmB,UAAU,YAAYK,IAAKxB,EAAMyB,IAAI,oC,QCrElEC,EAAcC,YAAe,CACxCC,IAAK,cACLC,QAAS,CAAC,GAAI,eAAM,wBAITC,EAAiBH,YAAiB,CAC7CC,IAAK,YACLC,QAAS,CACP,CAAEE,KAAM,OAAQC,MAAOC,KAAKC,UAC5B,CAAEH,KAAM,OAAQC,MAAOC,KAAKC,UAC5B,CAAEH,KAAM,SAAUC,MAAOC,KAAKC,UAC9B,CAAEH,KAAM,QAASC,MAAOC,KAAKC,UAC7B,CAAEH,KAAM,OAAQC,MAAOC,KAAKC,UAC5B,CAAEH,KAAM,UAAWC,MAAOC,KAAKC,UAC/B,CAAEH,KAAM,SAAUC,MAAOC,KAAKC,UAC9B,CAAEH,KAAM,QAASC,MAAOC,KAAKC,UAC7B,CAAEH,KAAM,QAASC,MAAOC,KAAKC,UAC7B,CAAEH,KAAM,OAAQC,MAAOC,KAAKC,aCbnBC,G,YAAQ,SAACrE,GACpB,IAAQsE,EAAwBtE,EAAxBsE,KAAMC,EAAkBvE,EAAlBuE,QAASC,EAASxE,EAATwE,KACjBvC,EAAWwC,YAA8BT,GAC/C,EAAwBjD,mBAAiB,IAAzC,mBAAOkD,EAAP,KAAaS,EAAb,KACA,EAA0B3D,mBAAiB,IAA3C,mBAAOmD,EAAP,KAAcS,EAAd,KAEAC,qBAAU,WACRF,EAAQF,EAAKP,MACbU,EAASE,OAAOL,EAAKN,UACpB,CAACM,IAEJ,IAAMM,EAAmB,kBAAMP,GAAQ,IACjCQ,EAAgBlD,uBACpB,SAACN,GAAD,OAA4CmD,EAAQnD,EAAEC,OAAOC,SAC7D,IAEIuD,EAAiBnD,uBACrB,SAACN,GAAD,OAA4CoD,EAASpD,EAAEC,OAAOC,SAC9D,IA4BIwD,EAAW,SAACC,GAEhB,OADe,IAAIC,OAAO,8BACZC,KAAKF,IAGrB,OAAIZ,EAEA,qBAAKjB,UAAU,UAAUnD,QAAS4E,EAAlC,SACE,sBAAKzB,UAAU,QAAQnD,QAAS,SAACqB,GAAD,OAAOA,EAAEc,mBAAzC,UACE,mBAAGgB,UAAU,cAAb,gCACA,uBAAO5B,MAAOwC,EAAMrD,SAAUmE,IAC9B,mBAAG1B,UAAU,cAAb,sCACA,uBAAO5B,MAAOyC,EAAOtD,SAAUoE,IAC/B,sBAAK1E,MAAO,CAAEgB,UAAW,QAAzB,UACE,cAAC,EAAD,CAAepB,QAAS4E,EAAxB,mBACA,cAAC,EAAD,CAAe5E,QAxCA,WAClB+E,EAASf,IAIdK,GAAQ,GACRtC,GAAS,SAACoD,GACR,IAAMC,EAAI,YAAOD,GASjB,OARAC,EAAKC,SAAQ,SAACC,EAAGzC,GACf,GAAIyC,IAAMhB,EAAM,CACd,IAAMiB,EAAS,CAAExB,OAAMC,MAAOwB,OAAOxB,IAGrC,OAFAoB,EAAKK,OAAO5C,EAAG,EAAG0C,QAClBH,EAAKK,OAAO5C,EAAI,EAAG,OAIhB,YAAIuC,OAdXM,MAAM,2GAsCA,kCAMD,+BCvEEC,EAAW,SAAC7F,GACvB,IAAQS,EAA0BT,EAA1BS,GAAIqF,EAAsB9F,EAAtB8F,QAASlF,EAAaZ,EAAbY,SACrB,OACE,uBACEmF,KAAK,WACLtF,GAAIA,EACJP,QAAS,SAACqB,GAAD,OAAOA,EAAEc,mBAClByD,QAASA,EACTlF,SAAUA,KCkFDoF,EAzFG,WAChB,MAA0BC,YAA2BjC,GAArD,mBAAOhC,EAAP,KAAcC,EAAd,KACMiE,EAASC,YAAyBvC,GACxC,ECPyB,WACzB,MAA0C7C,mBAAmB,IAA7D,mBAAOqF,EAAP,KAAsBC,EAAtB,KAEMC,EAAgBzE,uBAAY,SAACN,GAC7B6E,EAAcG,SAAShF,EAAEC,OAAOf,IAClC4F,EAAiBD,EAAcI,QAAO,SAACC,GAAD,OAAkBA,IAAiBlF,EAAEC,OAAOf,OAElF4F,EAAiB,GAAD,mBAAKD,GAAL,CAAoB7E,EAAEC,OAAOf,QAE/C,IACF,MAAO,CAAE2F,gBAAeC,mBAAkBC,iBDHiBI,GAAnDN,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,iBAAkBC,EAAzC,EAAyCA,cACzC,EAAwBvF,mBAAiB,IAAzC,mBAAOkD,EAAP,KAAaS,EAAb,KACA,EAA0B3D,mBAAiB,IAA3C,mBAAOmD,EAAP,KAAcS,EAAd,KACA,EAAwB5D,oBAAkB,GAA1C,mBAAOuD,EAAP,KAAaC,EAAb,KACA,EAA8BxD,mBAA0B,MAAxD,mBAAO4F,EAAP,KAAgBC,EAAhB,KAqCM3B,EAAW,SAACC,GAEhB,OADe,IAAIC,OAAO,8BACZC,KAAKF,IAGrB,OACE,sBAAK7B,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAO3C,YAAY,eAAKE,SA3CR,SAACW,GAAD,OAA4CmD,EAAQnD,EAAEC,OAAOC,UA4C7E,uBAAOf,YAAY,qBAAME,SA3CR,SAACW,GAAD,OAA4CoD,EAASpD,EAAEC,OAAOC,UA4C/E,cAAC,EAAD,CAAevB,QAvCC,WACpB,GAAK+D,GAASC,EAId,GAAKe,EAASf,GAAd,CAIA,IAAM2C,EAAQ,YAAO7E,GACrB6E,EAASnF,KAAK,CAAEuC,OAAMC,MAAOwB,OAAOxB,KACpCjC,EAAS,YAAI4E,SALXjB,MAAM,+GAJNA,MAAM,+FAqCJ,6BAEF,wBAAOvC,UAAU,QAAjB,UACE,uBAAOA,UAAU,YAAjB,SACE,6BACG6C,EAAO1C,KAAI,SAACgC,EAAGzC,GAAJ,OACV,oBAAY+D,MAAM,MAAlB,SACGtB,GADMzC,UAMf,uBAAOM,UAAU,YAAjB,SACGrB,EAAMwB,KAAI,SAACgC,EAAGzC,GAAJ,OACT,qBAAY7C,QAAS,iBAAM,CAACqE,GAAQ,GAAOqC,EAAWpB,KAAtD,UACE,qBAAKtF,QAAS,SAACqB,GAAD,OAAOA,EAAEc,mBAAvB,UACE,cAAC,EAAD,CACE5B,GAAE,UAAKsC,GACP+C,QAASM,EAAcG,SAAd,UAA0BxD,IACnCnC,SAAU0F,IAEXvD,EAAI,KAEP,6BAAKyC,EAAEvB,OACP,6BAAKuB,EAAEtB,UAVAnB,WAef,cAAC,EAAD,CAAe7C,QAnDM,WACvB,IAAM2G,EAAQ,YAAO7E,GACfiD,EAAWmB,EAAc5C,KAAI,SAACgC,GAAD,OAAOE,OAAOF,MAC3CuB,EAAUF,EAASL,QAAO,SAACQ,EAAGjE,GAAJ,OAAWkC,EAASgC,MAAK,SAACC,GAAD,OAASA,IAAQnE,QAC1Ed,EAAS,YAAI8E,IACbV,EAAiB,KA8Cf,0EACA,8BAAMM,GAAW,cAAC,EAAD,CAAOrC,KAAMA,EAAMC,QAASA,EAASC,KAAMmC,UErEnDQ,MAhBf,WACE,OACE,cAAC,IAAD,UACE,qBAAK9D,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+D,KAAK,IAAIC,OAAK,EAACC,UAAWxG,IACjC,cAAC,IAAD,CAAOsG,KAAK,WAAWC,OAAK,EAACC,UAAW3F,IACxC,cAAC,IAAD,CAAOyF,KAAK,WAAWC,OAAK,EAACC,UAAWvF,IACxC,cAAC,IAAD,CAAOqF,KAAK,aAAaC,OAAK,EAACC,UAAWC,IAC1C,cAAC,IAAD,CAAOD,UAAWxG,YCHb0G,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBCPDQ,EAAQC,YAAY,CAC/BC,QAAS,CACPC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,cCLpBE,IAASC,OACP,cAAC,IAAD,CAAkBC,MAAOX,EAAzB,SACE,cAAC,IAAMY,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.e90264af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n  onClick: () => void;\r\n}\r\n\r\nconst PrimaryButton = (props: Props) => {\r\n  const { children, onClick } = props;\r\n  return (\r\n    // <div style={{ margin: \"10px\" }}>\r\n    <Button onClick={onClick} variant=\"contained\" color=\"primary\" style={{ margin: \"10px\" }}>\r\n      {children}\r\n    </Button>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import { TextField } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  placeholder: string;\r\n  label: string;\r\n  variant: \"standard\" | \"filled\" | \"outlined\" | undefined;\r\n  margin: \"none\" | \"dense\" | \"normal\" | undefined;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst LoginText = (props: Props) => {\r\n  const { id, placeholder, label, variant, margin, onChange } = props;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        id={id}\r\n        placeholder={placeholder}\r\n        label={label}\r\n        variant={variant}\r\n        margin={margin}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginText;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PrimaryButton from \"../Button/PrimaryBtn\";\r\nimport LoginText from \"./LoginText\";\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleOnClick = () => {\r\n    if (username === \"test\" && password === \"sample\") {\r\n      history.push(\"/TopPage\");\r\n    }\r\n  };\r\n  return (\r\n    <div style={{ marginTop: 100 }}>\r\n      <LoginText\r\n        id=\"1\"\r\n        placeholder={\"test\"}\r\n        label=\"userName\"\r\n        variant=\"outlined\"\r\n        margin=\"dense\"\r\n        onChange={(e) => setUsername(e.target.value)}\r\n      />\r\n      <LoginText\r\n        id=\"2\"\r\n        placeholder={\"sample\"}\r\n        label=\"password\"\r\n        variant=\"outlined\"\r\n        margin=\"dense\"\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <PrimaryButton onClick={handleOnClick}>LOGIN</PrimaryButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PrimaryButton from \"../Button/PrimaryBtn\";\r\n\r\nconst TopPage = () => {\r\n  const history = useHistory();\r\n\r\n  const handleOnClickToDnd = useCallback(() => {\r\n    history.push(\"/DndPage\");\r\n  }, []);\r\n  const handleOnClickToTable = useCallback(() => {\r\n    history.push(\"/TablePage\");\r\n\t}, []);\r\n\r\n  return (\r\n    <div style={{ marginTop: 100 }}>\r\n      <PrimaryButton onClick={handleOnClickToDnd}>Dndへ</PrimaryButton>\r\n      <PrimaryButton onClick={handleOnClickToTable}>Tableへ</PrimaryButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopPage;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport \"./Dnd.css\";\r\n\r\nconst DropArea = () => {\r\n  const [state, setState] = useState<string[]>([]);\r\n  const [view, setView] = useState<string>(\"\");\r\n\r\n  const handleDropOver = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleDrop = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      handleOnChange(e);\r\n    },\r\n    [state]\r\n  );\r\n\r\n  const handleOnChange = useCallback(\r\n    (e: React.DragEvent<HTMLDivElement>) => {\r\n      const file = e.dataTransfer.files;\r\n      const fileList = [...state];\r\n      const reader = new FileReader();\r\n      for (let i = 0; i < file.length; i++) {\r\n        reader.readAsDataURL(file[i]);\r\n        reader.onloadend = () => {\r\n          // stateの更新\r\n          if (typeof reader.result === \"string\") {\r\n            fileList.push(reader.result);\r\n            setState([...fileList]);\r\n          }\r\n        };\r\n      }\r\n    },\r\n    [state]\r\n  );\r\n\r\n  // クリア\r\n  const handleClear = useCallback(() => {\r\n    setState([]);\r\n    setView(\"\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dnd\">\r\n      <div className=\"dndArea\" onDragOver={handleDropOver} onDrop={handleDrop}>\r\n        <div className=\"imageArea\">\r\n          DropArea\r\n          {state.map((img, i) => {\r\n            return (\r\n              // クリックした写真をセット\r\n              <div key={i} onClick={() => setView(img)}>\r\n                <img className=\"dropImage\" key={i} src={img} alt=\"イメージ\" />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        {/* {state.length && (\r\n          <button className=\"clearBtn\" onClick={handleClear}>\r\n            clear\r\n          </button>\r\n        )} */}\r\n        {state.length ? (\r\n          <button className=\"clearBtn\" onClick={handleClear}>\r\n            clear\r\n          </button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n      <div className=\"view\">{view && <img className=\"viewImage\" src={view} alt=\"イメージ\" />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropArea;\r\n","import { atom } from \"recoil\";\r\n\r\nexport interface DataInfo {\r\n  name: string;\r\n  level: number;\r\n}\r\n\r\nexport const TableHeader = atom<string[]>({\r\n  key: \"tableHeader\",\r\n  default: [\"\", \"名前\", \"レベル\"],\r\n});\r\n\r\n// 仮data\r\nexport const TableAtomState = atom<DataInfo[]>({\r\n  key: \"tableAtom\",\r\n  default: [\r\n    { name: \"Taro\", level: Math.random() },\r\n    { name: \"Jiro\", level: Math.random() },\r\n    { name: \"Saburo\", level: Math.random() },\r\n    { name: \"Shiro\", level: Math.random() },\r\n    { name: \"Goro\", level: Math.random() },\r\n    { name: \"Mutsumi\", level: Math.random() },\r\n    { name: \"Nanako\", level: Math.random() },\r\n    { name: \"Yaeko\", level: Math.random() },\r\n    { name: \"Kyuro\", level: Math.random() },\r\n    { name: \"juro\", level: Math.random() },\r\n  ],\r\n});\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport \"./Modal.css\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport { DataInfo, TableAtomState } from \"../Atom/Atom\";\r\nimport PrimaryButton from \"../Button/PrimaryBtn\";\r\n\r\ninterface ModalProp {\r\n  show: boolean;\r\n  setShow: (value: React.SetStateAction<boolean>) => void;\r\n  data: DataInfo;\r\n}\r\n\r\nexport const Modal = (props: ModalProp) => {\r\n  const { show, setShow, data } = props;\r\n  const setState = useSetRecoilState<DataInfo[]>(TableAtomState);\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [level, setLevel] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    setName(data.name);\r\n    setLevel(String(data.level));\r\n  }, [data]);\r\n\r\n  const handleCloseClick = () => setShow(false);\r\n  const handleGetName = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value),\r\n    []\r\n  );\r\n  const handleGetLevel = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => setLevel(e.target.value),\r\n    []\r\n  );\r\n\r\n  const handleChangeData = () => {\r\n    if (!checkNum(level)) {\r\n      alert(\"レベルには半角数字を入れてください\");\r\n      return;\r\n    }\r\n    setShow(false);\r\n    setState((prev) => {\r\n      const list = [...prev];\r\n      list.forEach((v, i) => {\r\n        if (v === data) {\r\n          const newObj = { name, level: Number(level) };\r\n          list.splice(i, 0, newObj);\r\n          list.splice(i + 1, 1);\r\n          return;\r\n        }\r\n      });\r\n      return [...list];\r\n    });\r\n  };\r\n\r\n  /**\r\n   * 数値か判定\r\n   * @param str\r\n   * @returns\r\n   */\r\n  const checkNum = (str: string) => {\r\n    const regexp = new RegExp(/^[-]?([1-9]\\d*|0)(\\.\\d+)?$/);\r\n    return regexp.test(str);\r\n  };\r\n\r\n  if (show) {\r\n    return (\r\n      <div className=\"overlay\" onClick={handleCloseClick}>\r\n        <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\r\n          <p className=\"modalHeader\">■名前</p>\r\n          <input value={name} onChange={handleGetName}></input>\r\n          <p className=\"modalHeader\">■レベル</p>\r\n          <input value={level} onChange={handleGetLevel}></input>\r\n          <div style={{ marginTop: \"30px\" }}>\r\n            <PrimaryButton onClick={handleCloseClick}>close</PrimaryButton>\r\n            <PrimaryButton onClick={handleChangeData}>変更</PrimaryButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <></>;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\ninterface CheckProps {\r\n  id: string;\r\n  checked: boolean;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const CheckBox = (props: CheckProps) => {\r\n  const { id, checked, onChange } = props;\r\n  return (\r\n    <input\r\n      type=\"checkbox\"\r\n      id={id}\r\n      onClick={(e) => e.stopPropagation()}\r\n      checked={checked}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { DataInfo, TableAtomState, TableHeader } from \"../Atom/Atom\";\r\nimport \"./Table.css\";\r\nimport PrimaryButton from \"../Button/PrimaryBtn\";\r\nimport { Modal } from \"../Modal/Modal\";\r\nimport { CheckBox } from \"./CheckBox\";\r\nimport { useCheckBox } from \"../Hooks/useCheckBox\";\r\n\r\nconst TablePage = () => {\r\n  const [state, setState] = useRecoilState<DataInfo[]>(TableAtomState);\r\n  const header = useRecoilValue<string[]>(TableHeader);\r\n  const { checkedValues, setCheckedValues, handleChecked } = useCheckBox();\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [level, setLevel] = useState<string>(\"\");\r\n  const [show, setShow] = useState<boolean>(false);\r\n  const [oneData, setOneData] = useState<DataInfo | null>(null);\r\n\r\n  const handleGetName = (e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value);\r\n  const handleGetLevel = (e: React.ChangeEvent<HTMLInputElement>) => setLevel(e.target.value);\r\n\r\n  /**\r\n   * stateの更新\r\n   */\r\n  const handleAddData = () => {\r\n    if (!name || !level) {\r\n      alert(\"名前とレベルを入力してください\");\r\n      return;\r\n    }\r\n    if (!checkNum(level)) {\r\n      alert(\"レベルには半角数字を入れてください\");\r\n      return;\r\n    }\r\n    const dataList = [...state];\r\n    dataList.push({ name, level: Number(level) });\r\n    setState([...dataList]);\r\n  };\r\n\r\n  /**\r\n   * 選択中のデータ削除\r\n   */\r\n  const handleDeleteData = () => {\r\n    const dataList = [...state];\r\n    const checkNum = checkedValues.map((v) => Number(v));\r\n    const newList = dataList.filter((_, i) => !checkNum.some((num) => num === i));\r\n    setState([...newList]);\r\n    setCheckedValues([]);\r\n  };\r\n\r\n  /**\r\n   * 数値か判定\r\n   * @param str\r\n   */\r\n  const checkNum = (str: string) => {\r\n    const regexp = new RegExp(/^[-]?([1-9]\\d*|0)(\\.\\d+)?$/);\r\n    return regexp.test(str);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tablePage\">\r\n      <div className=\"inputArea\">\r\n        <input placeholder=\"名前\" onChange={handleGetName} />\r\n        <input placeholder=\"レベル\" onChange={handleGetLevel} />\r\n        <PrimaryButton onClick={handleAddData}>追加</PrimaryButton>\r\n      </div>\r\n      <table className=\"table\">\r\n        <thead className=\"tableHead\">\r\n          <tr>\r\n            {header.map((v, i) => (\r\n              <th key={i} scope=\"col\">\r\n                {v}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tableBody\">\r\n          {state.map((v, i) => (\r\n            <tr key={i} onClick={() => [setShow(true), setOneData(v)]}>\r\n              <td  onClick={(e) => e.stopPropagation()}>\r\n                <CheckBox\r\n                  id={`${i}`}\r\n                  checked={checkedValues.includes(`${i}`)}\r\n                  onChange={handleChecked}\r\n                />\r\n                {i + 1}\r\n              </td>\r\n              <td>{v.name}</td>\r\n              <td>{v.level}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <PrimaryButton onClick={handleDeleteData}>選択中のデータを削除</PrimaryButton>\r\n      <div>{oneData && <Modal show={show} setShow={setShow} data={oneData} />}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TablePage;\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\n/**\r\n * checkBoxのcheck管理カスタムフック\r\n */\r\nexport const useCheckBox = () => {\r\n  const [checkedValues, setCheckedValues] = useState<string[]>([]);\r\n\r\n  const handleChecked = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (checkedValues.includes(e.target.id)) {\r\n      setCheckedValues(checkedValues.filter((checkedValue) => checkedValue !== e.target.id));\r\n    } else {\r\n      setCheckedValues([...checkedValues, e.target.id]);\r\n    }\r\n  },[]);\r\n  return { checkedValues, setCheckedValues ,handleChecked };\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch as Routes } from \"react-router-dom\";\r\nimport LoginPage from \"./Login/LoginPage\";\r\nimport TopPage from \"./Top/TopPage\";\r\nimport DropArea from \"./DragAndDrop/DropArea\";\r\nimport Table from \"./Table/Table\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Routes>\r\n          <Route path=\"/\" exact component={LoginPage} />\r\n          <Route path=\"/TopPage\" exact component={TopPage} />\r\n          <Route path=\"/DndPage\" exact component={DropArea} />\r\n          <Route path=\"/TablePage\" exact component={Table} />\r\n          <Route component={LoginPage} />\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const Color = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#e57373\",\r\n      main: \"#e57373\",\r\n      dark: \"#e57373\",\r\n      contrastText: \"#FFF\",\r\n    },\r\n    secondary: {\r\n      light: \"#63a4ff\",\r\n      main: \"#1976d2\",\r\n      dark: \"#004ba0\",\r\n      contrastText: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { Color } from \"./../src/Materialui/Color\";\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={Color}>\r\n    <React.StrictMode>\r\n      <RecoilRoot>\r\n        <App />\r\n      </RecoilRoot>\r\n    </React.StrictMode>\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}